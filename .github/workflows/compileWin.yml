name: CompileWin

on:
  push:
    paths:
      - '**.py'
      - 'drivers/**'
    tags-ignore:
      - '*'
  schedule:
    - cron: '0 0 */30 * *'
  release:
    types: [created]
  workflow_dispatch:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: main

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Run compile.py
      run: |
        pip install -r build/requirements.txt
        python build/compile.py

    - name: Read variables from file
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: |
        # Get-Content variables.txt | ForEach-Object {
        #   $var = $_ -split '='
        #   echo "Setting environment variable $($var[0]) with value $($var[1])"
        #   [Environment]::SetEnvironmentVariable($var[0], $var[1], 'User')
        # }
        Write-Output "webdriverDL is $env:webdriverDL"
        Write-Output "x64DL is $env:x64DL"
        Write-Output "chromium is $env:chromium"
        Write-Output "driver is $env:driver"
        Write-Output "chromeVersion is $env:chromeVersion"

    - name: Test environment variables
      run: |
        Write-Output "webdriverDL is $env:webdriverDL"
        Write-Output "x64DL is $env:x64DL"
        Write-Output "chromium is $env:chromium"
        Write-Output "driver is $env:driver"
        Write-Output "chromeVersion is $env:chromeVersion"

    - name: Move necessary files to compiled
      run: |
        dir
        cd $env:GITHUB_WORKSPACE
        dir
        New-Item -ItemType Directory -Path compiled
        Copy-Item -Path main.py, requirements.txt -Destination compiled
        Copy-Item -Path drivers -Recurse -Destination compiled
        Copy-Item -Path build -Recurse -Destination compiled
        Get-ChildItem -Path compiled

    - name: Download URLs
      run: |
        echo "webdriverDL: $env:webdriverDL"
        echo "x64DL: $env:x64DL"
        Invoke-WebRequest -Uri $env:webdriverDL -OutFile webdriver.zip
        Invoke-WebRequest -Uri $env:x64DL -OutFile browser.zip

    - name: Extract webdriver and browser
      run: |
        Expand-Archive -Path webdriver.zip -DestinationPath compiled/drivers
        Expand-Archive -Path browser.zip -DestinationPath compiled/drivers
        Move-Item -Path "compiled/drivers/ungoogled-chromium_${env:chromeVersion}_windows" -Destination "compiled/drivers/browser"

    - name: Build exe with pyinstaller
      run: |
        cd $env:GITHUB_WORKSPACE
        Move-Item -Path compiled -Destination webscraperGrammarly
        cd webscraperGrammarly
        echo "Current DIR and contents"
        Get-Location
        dir
        pip install -r requirements.txt
        echo "Running pyinstaller"
        pyinstaller --noconfirm --onedir --console --distpath "out/" --splash "build/ICO.png" --icon "build/ICO.ico" --name "webscraperGrammarly" --add-data "drivers;drivers/" "main.py"
        echo "Done pyinstaller"
        cd $env:GITHUB_WORKSPACE
        Get-ChildItem
        Move-Item -Path webscraperGrammarly/out/webscraperGrammarly/ -Destination exeWebscraperGrammarly

    - name: Zip executable
      run: |
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::CreateFromDirectory("exeWebscraperGrammarly", "compiledEXE-Win64.zip")
      if: github.event_name == 'release'

    - name: Zip compiled directory
      run: |
        Get-ChildItem
        cd $env:GITHUB_WORKSPACE
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::CreateFromDirectory("webscraperGrammarly", "compiled-Win64.zip")
      if: github.event_name == 'release'
    - name: Upload python artifact
      uses: actions/upload-artifact@v2
      with:
        name: compiled-Win64
        path: webscraperGrammarly/

    - name: Upload exe artifact
      uses: actions/upload-artifact@v2
      with:
        name: compiledEXE-Win64
        path: exeWebscraperGrammarly/

    - name: Release Asset
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          compiled-Win64.zip
          compiledEXE-Win64.zip
        body: " \n\nDownload ``compiledEXE-Win64.zip`` for zero effort. Just unzip it and run ``webscraperGrammarly.exe``\nOr, downlaod ``compiled-Win64.zip`` and run main.py"
        append_body: true
        draft: false
        prerelease: false
      if: github.event_name == 'release'